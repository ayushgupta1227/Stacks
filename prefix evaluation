#include <iostream>
#include <stack>
#include <math.h>
using namespace std;

int prefixEvaluation(string s)
{
    stack<int> st;
    for (int i = s.length() - 1; i >= 0; i--)
    {
        if (s[i] >= '0' && s[i] <= '9')
        {                        // if character is an operand
            st.push(s[i] - '0'); // character becomes an integer if 0 ASCII value is subtracted from s[i]
        }
        else
        {
            int op1 = st.top(); // if character is operator
            st.pop();
            int op2 = st.top();
            st.pop();

            switch (s[i])
            {
            case '+':
                /* code */
                st.push(op1 + op2);
                break;

            case '-':
                /* code */
                st.push(op1 - op2);
                break;

            case '*':
                /* code */
                st.push(op1 * op2);
                break;

            case '/':
                /* code */
                st.push(op1 / op2);
                break;

            case '^':
                /* code */
                st.push(pow(op1, op2));
                break;
            }
        }
    }
    return st.top();
}

int main()
{
    cout << prefixEvaluation("-+7*45+20") << endl;
    return 0;
}
