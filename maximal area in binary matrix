 int maximalRectangle(vector<vector<char>>& matrix) {       // tc is o(N^2)
        if(matrix.empty()){       
            return 0;
        }
        int maxRec=0;
         vector<int> height(matrix[0].size(),0);
         for(int i=0;i<matrix.size();i++){
             for(int j=0;j<matrix[0].size();j++){
                 if(matrix[i][j]=='0'){
                     height[j]=0;
                 }
                 else{
                     height[j]++;
                 }
             }
             maxRec = max(maxRec, largestRectangleArea(height));
         }
         return maxRec;
    }

 int largestRectangleArea(vector<int>& heights) {
         stack<int> s;
         heights.push_back(0);
         int maxSize=0;
         for(int i=0;i<heights.size();i++){
             if(s.empty() || heights[i]>= heights[s.top()]){
                 s.push(i);            
         }
         else{
             int temp= heights[s.top()];
             s.pop();
             maxSize = max(maxSize, temp* (s.empty()? i: i-1-s.top()));
             i--;
         }
         }
         return maxSize;
 }
};
    
